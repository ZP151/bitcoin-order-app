{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zhouping\\\\bitcoin-order-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\zhouping\\\\bitcoin-order-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { Order } from '../models/order';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var BitcoinService = /*#__PURE__*/(function () {\n  var BitcoinService = /*#__PURE__*/function () {\n    function BitcoinService(http) {\n      _classCallCheck(this, BitcoinService);\n\n      this.http = http;\n      this.backendApiUrl = environment.api_url;\n      this.bitcoinApiUrl = \"\".concat(this.backendApiUrl, \"/bitcoin\");\n      this.bitcoinPriceApiUrl = \"\".concat(this.backendApiUrl, \"/price\");\n    }\n\n    _createClass(BitcoinService, [{\n      key: \"getPrice\",\n      value: function getPrice() {\n        return this.http.get(\"\".concat(this.bitcoinPriceApiUrl, \"?primaryCurry=BTC&secondaryCurry=SGD\")).toPromise();\n      }\n    }, {\n      key: \"getOrderDetails\",\n      value: function getOrderDetails(orderId) {\n        return this.http.get(this.bitcoinApiUrl + '/' + orderId).toPromise();\n      }\n    }, {\n      key: \"updateOrderDetails\",\n      value: function updateOrderDetails(orderId, order) {\n        return this.http.put(this.bitcoinApiUrl + '?orderId=' + orderId, order).toPromise();\n      }\n    }, {\n      key: \"saveOrderDetails\",\n      value: function saveOrderDetails(orderDet, myPrice, myAmt, orderType) {\n        var svcOrder = new Order('', '', '', '', 'not selected', '', 0, 0, \"https://s3.amazonaws.com/cdn.freshdesk.com/data/helpdesk/\\n        attachments/production/22041032646/original/RgItugeuFVq91GFRfS\\n        4iNcUFzoOKjRuKjA.png\", 'not selected', 0);\n        svcOrder.address = orderDet.bitAddress;\n        svcOrder.contactNo = orderDet.contactno;\n        svcOrder.dob = orderDet.dob;\n        svcOrder.gender = orderDet.gender;\n        svcOrder.name = orderDet.name;\n        svcOrder.orderType = orderType;\n        svcOrder.orderUnit = orderDet.unit;\n        svcOrder.qrUrl = orderDet.myQr;\n        svcOrder.orderDate = orderDet.orderDate;\n        svcOrder.price = myPrice;\n        svcOrder.amt = myAmt;\n        return this.http.post(this.bitcoinApiUrl, svcOrder).toPromise();\n      }\n    }]);\n\n    return BitcoinService;\n  }();\n\n  BitcoinService.ɵfac = function BitcoinService_Factory(t) {\n    return new (t || BitcoinService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  BitcoinService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BitcoinService,\n    factory: BitcoinService.ɵfac,\n    providedIn: 'root'\n  });\n  return BitcoinService;\n})();","map":null,"metadata":{},"sourceType":"module"}